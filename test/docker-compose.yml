# File: feathers-keycloak-listener/test/docker-compose.yml
#
# Deploys containers for local tests: Keycloak + listener, and Selenium
#

version: '3.8'

services:

  keycloak_event_gateway:
      image: kalisio/keycloak-event-gateway
      environment:
        TARGET_DIR: /kalisio/artifacts
      volumes:
        - artifacts:/kalisio/artifacts

  keycloak:
      image: quay.io/keycloak/keycloak:22.0.5
      command: start-dev
      environment:
        KC_HOSTNAME: localhost
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: adminp
      depends_on:
        - keycloak_event_gateway
      volumes:
        - artifacts:/opt/keycloak/providers:ro
      ports:
        - 8080:8080

  selenium:
      image: selenium/standalone-firefox:110.0
      # Required so Selenium can access Keycloak through http://localhost:8080
      network_mode: host
      # ports:
        # Cannot use "ports 4444:4444", because we use --network=host
        # - 4444:4444

  mongo:
      image: mongo:4.2
      ports:
        - 27017:27017

  frontend:
      image: tmp/kapp
      build:
        context: .
        dockerfile: kApp.Dockerfile
      command: ./start_frontend.sh
      environment:
        PORT: 8081
        CLIENT_PORT: 8082
      network_mode: host

  api:
      image: tmp/kapp
      build:
        context: .
        dockerfile: kApp.Dockerfile
      command: ./start_api.sh
      depends_on:
        - mongo
      environment:
        DB_URL: mongodb://172.17.0.1:27017/kapp
        PORT: 8081
        CLIENT_PORT: 8082
        KEYCLOAK_URL: http://172.17.0.1:8080/
        KEYCLOAK_CLIENT_ID: moncoco
        KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
        SERVICES_JS_FILE: /opt/kApp/api/src/services.js
      volumes:
        - ./resources/kApp/api/src:/opt/kApp/api/src:ro
      # network_mode: host
      ports:
        - 8081:8081

volumes:
   # We use a named volume so the keycloak_event_gateway container can
   # provide its JAR file to the keycloak container.
   artifacts:
